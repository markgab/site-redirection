{"version":3,"file":"Util.js","sourceRoot":"","sources":["../src/shared/Util.ts"],"names":[],"mappings":"AAEA,MAAM,CAAC,OAAO,OAAO,IAAI;IAGrB,0CAA0C;IAEnC,MAAM,KAAK,IAAI;QAClB,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAEL;;YAEQ;IAEJ,+DAA+D;IAC/D,MAAM,CAAC,KAAK,CAAC,IAAgB;QACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,6CAA6C;QAC7C,4CAA4C;IAChD,CAAC;CACJ;AACD;;;;;;;;;;;;;;;;;;IAkBI","sourcesContent":["import ConfigData from \"../data/ConfigData\";\r\n\r\nexport default class Util {\r\n\r\n    private static _data: ConfigData;\r\n    //private static _context: ICommonContext;\r\n\r\n    public static get data(): ConfigData {\r\n        return this._data;\r\n    }\r\n\r\n/*     public static get spContext(): ICommonContext {\r\n        return this._context;\r\n    } */\r\n\r\n    // , context: ApplicationCustomizerContext | _spPageContextInfo\r\n    static setup(data: ConfigData) {\r\n        this._data = data;\r\n        //var _spPageContextInfo: _spPageContextInfo;\r\n        //this._context = transformContext(context);\r\n    }\r\n}\r\n/* \r\nfunction transformContext(context: ApplicationCustomizerContext | _spPageContextInfo): ICommonContext {\r\n    const classic = <_spPageContextInfo>context;\r\n\r\n    if(classic.webId) {\r\n        return {\r\n            absoluteWebUrl: classic.webAbsoluteUrl,\r\n        };\r\n    }\r\n    \r\n    return {\r\n        absoluteWebUrl: (context as ApplicationCustomizerContext).pageContext.web.absoluteUrl,\r\n    };\r\n\r\n}\r\n\r\nexport interface ICommonContext {\r\n    absoluteWebUrl: string;\r\n} */"]}